// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var InvalidDate = Caml_exceptions.create("Date.InvalidDate");

function daysInMonth($staropt$star, month) {
  var leapYear = $staropt$star ? $staropt$star[0] : /* false */0;
  switch (month) {
    case 1 : 
        if (leapYear !== 0) {
          return 29;
        } else {
          return 28;
        }
    case 3 : 
    case 5 : 
    case 8 : 
    case 10 : 
        return 30;
    case 0 : 
    case 2 : 
    case 4 : 
    case 6 : 
    case 7 : 
    case 9 : 
    case 11 : 
        return 31;
    
  }
}

function monthFromInt(m) {
  var match = m % 12;
  if (match > 11 || match < 0) {
    return /* Jan */0;
  } else {
    return match;
  }
}

function isLeapYear(d) {
  if (d[/* year */0] % 4 === 0 && !(d[/* year */0] % 100)) {
    return +(d[/* year */0] % 400 === 0);
  } else {
    return /* false */0;
  }
}

function _isValid(d) {
  if (d[/* year */0] > -271820 && d[/* year */0] < 275759) {
    return +(d[/* day */2] <= daysInMonth(/* Some */[isLeapYear(d)], d[/* month */1]));
  } else {
    return /* false */0;
  }
}

function make($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, $staropt$star$4, $staropt$star$5, $staropt$star$6, _) {
  var year = $staropt$star ? $staropt$star[0] : 1970;
  var month = $staropt$star$1 ? $staropt$star$1[0] : /* Jan */0;
  var day = $staropt$star$2 ? $staropt$star$2[0] : 1;
  var hours = $staropt$star$3 ? $staropt$star$3[0] : 0;
  var minutes = $staropt$star$4 ? $staropt$star$4[0] : 0;
  var seconds = $staropt$star$5 ? $staropt$star$5[0] : 0;
  var milliseconds = $staropt$star$6 ? $staropt$star$6[0] : 0;
  var d = /* record */[
    /* year */year,
    /* month */month,
    /* day */day,
    /* hours */hours,
    /* minutes */minutes,
    /* seconds */seconds,
    /* milliseconds */milliseconds
  ];
  var match = _isValid(d);
  if (match !== 0) {
    return /* Some */[d];
  } else {
    return /* None */0;
  }
}

function _toJs(d) {
  return new Date(/* int array */[
              d[/* year */0],
              d[/* month */1],
              d[/* day */2],
              d[/* hours */3],
              d[/* minutes */4],
              d[/* seconds */5],
              d[/* milliseconds */6]
            ]);
}

function _fromJs(jsDate) {
  var month = monthFromInt(jsDate.getUTCMonth());
  return make(/* Some */[jsDate.getUTCFullYear()], /* Some */[month], /* Some */[jsDate.getUTCDate()], /* Some */[jsDate.getUTCHours()], /* Some */[jsDate.getUTCMinutes()], /* Some */[jsDate.getUTCSeconds()], /* Some */[jsDate.getUTCMilliseconds()], /* () */0);
}

function fromUnixTime(unixTime) {
  var param = _fromJs(new Date(unixTime * 1000));
  if (param) {
    return param[0];
  } else {
    throw InvalidDate;
  }
}

function toUnixTime(date) {
  return new Date(_toJs(date)) / 1000;
}

function now() {
  var param = _fromJs(new Date(Date.now()));
  if (param) {
    return param[0];
  } else {
    throw InvalidDate;
  }
}

function year(d) {
  return d[/* year */0];
}

function month(d) {
  return d[/* month */1];
}

function day(d) {
  return d[/* day */2];
}

function hours(d) {
  return d[/* hours */3];
}

function minutes(d) {
  return d[/* minutes */4];
}

function seconds(d) {
  return d[/* seconds */5];
}

function milliseconds(d) {
  return d[/* milliseconds */6];
}

function addMonth(i, d) {
  var newMonth = d[/* month */1] + i | 0;
  return /* record */[
          /* year */d[/* year */0] + (newMonth / 12 | 0) | 0,
          /* month */monthFromInt(newMonth),
          /* day */d[/* day */2],
          /* hours */d[/* hours */3],
          /* minutes */d[/* minutes */4],
          /* seconds */d[/* seconds */5],
          /* milliseconds */d[/* milliseconds */6]
        ];
}

function toJson(d) {
  var month = d[/* month */1] + 1 | 0;
  return "" + (String(d[/* year */0]) + ("-" + (String(month) + ("-" + (String(d[/* day */2]) + ("T" + (String(d[/* hours */3]) + (":" + (String(d[/* minutes */4]) + (":" + (String(d[/* seconds */5]) + ("." + (String(d[/* milliseconds */6]) + "")))))))))))));
}

exports.make = make;
exports.fromUnixTime = fromUnixTime;
exports.toUnixTime = toUnixTime;
exports.now = now;
exports.year = year;
exports.month = month;
exports.day = day;
exports.hours = hours;
exports.minutes = minutes;
exports.seconds = seconds;
exports.milliseconds = milliseconds;
exports.addMonth = addMonth;
exports.toJson = toJson;
/* No side effect */
