bs_package_flags = -bs-package-name date.re
src_root_dir = /Users/andreas/code/date.re
bsc = /Users/andreas/code/date.re/node_modules/bs-platform/lib/bsc.exe
bsdep = /Users/andreas/code/date.re/node_modules/bs-platform/lib/bsb_helper.exe
warnings = -w -30-40+6+7+27+32..39+44+45+101
bsc_flags = -nostdlib -I '/Users/andreas/code/date.re/node_modules/bs-platform/lib/ocaml' -bs-super-errors -w +a-4-6-7-9-27-29-32..39-41..42-40-44-45-48-50 -warn-error -a+8 -no-alias-deps -color always
ppx_flags = 
bs_package_includes = 
bs_package_dev_includes = 
namespace = 
bsb_dir_group = 0
bsc_group_1_includes = -I example
refmt = /Users/andreas/code/date.re/node_modules/bs-platform/lib/refmt3.exe
reason_react_jsx = -ppx '/Users/andreas/code/date.re/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'
refmt_flags = --print binary
bsc_lib_includes = -I src
rule build_ast_and_module_sets_from_re
  command = ${bsc} -pp "${refmt} ${refmt_flags}" ${reason_react_jsx}  ${ppx_flags} ${warnings} ${bsc_flags} -c -o ${out} -bs-syntax-only -bs-binary-ast -impl ${in}
  description = [34mBuilding[39m [2m${out}[22m
build example/example.mlast : build_ast_and_module_sets_from_re $src_root_dir/example/example.re
rule build_deps
  command = ${bsdep} ${namespace} -g ${bsb_dir_group} -MD ${in}
  description = [34mBuilding[39m [2m${out}[22m
build example/example.mlast.d : build_deps example/example.mlast
  bsb_dir_group = 1
rule build_cmj_cmi
  command = ${bsc} ${bs_package_flags} -bs-assume-no-mli -bs-no-builtin-ppx-ml -bs-no-implicit-include ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in} $postbuild
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build example/example.cmj |  $src_root_dir/lib/js/example/example.js example/example.cmi : build_cmj_cmi example/example.mlast
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/example
  bs_package_includes = $bs_package_includes $bs_package_dev_includes
  bsc_extra_includes = $bsc_group_1_includes
rule build_ast_and_module_sets_from_rei
  command = ${bsc} -pp "${refmt} ${refmt_flags}" ${reason_react_jsx} ${ppx_flags} ${warnings} ${bsc_flags}  -c -o ${out} -bs-syntax-only -bs-binary-ast -intf ${in}
  description = [34mBuilding[39m [2m${out}[22m
build src/Date.mliast : build_ast_and_module_sets_from_rei $src_root_dir/src/Date.rei
build src/Date.mliast.d : build_deps src/Date.mliast
rule build_cmi
  command = ${bsc} ${bs_package_flags} -bs-no-builtin-ppx-mli -bs-no-implicit-include ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in}
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build src/Date.cmi : build_cmi src/Date.mliast
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Date.mlast : build_ast_and_module_sets_from_re $src_root_dir/src/Date.re
build src/Date.mlast.d : build_deps src/Date.mlast
rule build_cmj_only
  command = ${bsc} ${bs_package_flags} -bs-assume-has-mli -bs-no-builtin-ppx-ml -bs-no-implicit-include  ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in} $postbuild
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build src/Date.cmj |  $src_root_dir/lib/js/src/Date.js : build_cmj_only src/Date.mlast |  src/Date.cmi
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build build.ninja : phony  ||  src/Date.mlast.d src/Date.mliast.d example/example.mlast.d
